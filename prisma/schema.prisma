// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String @id @default(cuid())
  title        String
  slug         String
  imageUrl     String
  description  String
  priceInCents Int
  stock        Int

  orders Order[]

  Category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  store   Store  @relation(fields: [storeId], references: [id])
  storeId String

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       String    @id @default(uuid())
  title    String
  slug     String
  products Product[]
}

model Store {
  id          String @id @default(cuid())
  imageUrl    String
  title       String
  description String
  cnpj        String

  userId   String
  products Product[]

  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model Order {
  id String @id @default(uuid())

  fullPriceOrderInCents Int
  storeId               String
  store                 Store       @relation(fields: [storeId], references: [id])
  status                OrderStatus
  customerIdStripe      String
  customerId            String
  Products              Product[]
}

enum OrderStatus {
  pending
  awaiting_payment
  payment_confirmed
  processing
  shipped
  delivered
  canceled
  returned
}
